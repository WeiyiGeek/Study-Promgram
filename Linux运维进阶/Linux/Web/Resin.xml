<resin xmlns="http://caucho.com/ns/resin" xmlns:resin="http://caucho.com/ns/resin/core">
 
  <!-- adds all .jar files under the resin/lib directory （加载 resin/lib 下的所有.jar文件） -->
  <class-loader>
    <tree-loader path="${resin.home}/ext-lib"/>
    <tree-loader path="${resin.root}/ext-lib"/>
    <tree-loader path="${resin.home}/lib"/>
    <tree-loader path="${resin.root}/lib"/>
  </class-loader>
<span id="more-321"></span>
  <!--Management configuration Remote management requires at least one enabled admin user.(管理配置,需要一个管理员用户)-->
  <management path="${resin.root}/admin">
    <user name="admin" password="password" disable="true"/>
    <resin:if test="${resin.professional}">
      <deploy-service/>
      <jmx-service/>
      <log-service/>
      <xa-log-service/>
    </resin:if>
  </management>
 
  <!--Logging configuration for the JDK logging API.(JDK日志配置)-->
  <log name="" level="info" path="stdout:"
       timestamp="[%H:%M:%S.%s] {%{thread}} "/>
 
  <!-- 'info' for production 'fine' or 'finer' for development and troubleshooting (日志信息级别：info生产环境 fine和finer适合开发环境和调试环境)-->
  <logger name="com.caucho" level="info"/>
  <logger name="com.caucho.java" level="config"/>
  <logger name="com.caucho.loader" level="config"/>
 
  <!--For production sites, change dependency-check-interval to something like 600s, so it only checks for updates every 10 minutes.(环境依赖检查时间，生产系统设置长点，600s 10分钟)-->
  <dependency-check-interval>2s</dependency-check-interval>
 
  <!-- SMTP server for sending mail notifications （SMTP服务器配置）-->
  <system-property mail.smtp.host="127.0.0.1"/>
  <system-property mail.smtp.port="25"/>
 
  <!-- Sets the default character encoding to utf-8 <character-encoding>utf-8</character-encoding> (默认字符集为 utf-8 ) -->
 
  <!-- You can change the compiler to "javac", "eclipse" or "internal".(你可以把编译器改成 javac、eclipse 或 internal)-->
  <javac compiler="internal" args="-source 1.5"/>
 
  <!-- Security providers. <security-provider> com.sun.net.ssl.internal.ssl.Provider </security-provider> (SSL 安全)-->
 
  <!-- Uncomment to use Resin's XML implementations
     - <system-property javax.xml.parsers.DocumentBuilderFactory
     -                 ="com.caucho.xml.parsers.XmlDocumentBuilderFactory"/>
     - <system-property javax.xml.parsers.SAXParserFactory
     -                 ="com.caucho.xml.parsers.XmlSAXParserFactory"/>
    (去掉注视，可以使用resin提供的xml应用)
     -->
 
  <cluster id="app-tier">
    <!-- sets the content root for the cluster, relative to server.root  (设置集群的根目录)-->
    <root-directory>.</root-directory>
 
    <server-default>
      <!-- The http port (http服务的端口)-->
      <http address="*" port="8080"/>
 
      <!-- SSL port configuration:
         - <http address="*" port="8443">
         -   <openssl>
         -     <certificate-file>keys/gryffindor.crt</certificate-file>
         -     <certificate-key-file>keys/gryffindor.key</certificate-key-file>
         -     <password>test123</password>
         -   </openssl>
         - </http>  (SSL配置)
        -->
 
      <!-- The JVM arguments (JVM参数设置)-->
      <jvm-arg>-Xmx256m</jvm-arg>
      <jvm-arg>-Xss1m</jvm-arg>
      <jvm-arg>-Xdebug</jvm-arg>
      <jvm-arg>-Dcom.sun.management.jmxremote</jvm-arg>
 
      <!-- Uncomment to enable admin heap dumps  (去掉注释 你可以自己管理内存堆)
 - <jvm-arg>-agentlib:resin</jvm-arg> -->
 
      <!-- arguments for the watchdog process (配置watchdog)-->
      <watchdog-jvm-arg>-Dcom.sun.management.jmxremote</watchdog-jvm-arg>
      <watchdog-port>6600</watchdog-port>
 
      <!-- Configures the minimum free memory allowed before Resin will force a restart.（配置resin强制重启时的最小空闲内存）-->
      <memory-free-min>1M</memory-free-min>
 
      <!-- Maximum number of threads.(最大线程数量) -->
      <thread-max>256</thread-max>
 
      <!-- Configures the socket timeout (套接字超时时间) -->
      <socket-timeout>65s</socket-timeout>
 
      <!-- Configures the keepalive (keepalive 的最大链接数和keepalive的超时时间)-->
      <keepalive-max>128</keepalive-max>
      <keepalive-timeout>15s</keepalive-timeout>
 
      <!--
         - If starting bin/resin as root on Unix, specify the user name
         - and group name for the web server user.(使用unix系统时 启动resin的用户和组)
         - <user-name>resin</user-name>
         - <group-name>resin</group-name>
        -->
 
    </server-default>
 
    <!-- define the servers in the cluster  (定义集群服务器)-->
    <server id="" address="127.0.0.1" port="6800"/>
 
    <!-- Configures the persistent store for single-server or clustered in Resin professional.(配置独立或集群的持久化存储，专业版功能) -->
    <resin:if test="${resin.professional}">
      <persistent-store type="cluster">
        <init path="session"/>
      </persistent-store>
    </resin:if>
 
    <!-- For security, use a different cookie for SSL sessions.(为了安全 你可以为SSL会话定义一个不同的cookie)
       - <ssl-session-cookie>SSL_JSESSIONID</ssl-session-cookie>
      -->
 
    <!-- Enables the cache (available in Resin Professional) (缓存功能启用， Professional功能)-->
    <resin:if test="${resin.professional}">
      <cache path="cache" memory-size="64M">
        <!-- Vary header rewriting for IE -->
        <rewrite-vary-as-private/>
      </cache>
    </resin:if>
 
    <!-- Enables periodic checking of the server status and check for deadlocks.. All servers can add <url>s to be checked. (可以定期检查服务器的状态和死锁检查..所有服务器都可以添加的<url> s的检查  Professional功能 )-->
    <resin:if test="${resin.professional}">
      <ping>
        <!-- <url>http://localhost:8080/test-ping.jsp</url> -->
      </ping>
    </resin:if>
 
    <!-- Defaults applied to each web-app.(默认web程序)-->
    <web-app-default>
      <prologue>
        <!-- Extension library for common jar files.  The ext is safe
           - even for non-classloader aware jars.  The loaded classes
           - will be loaded separately for each web-app, i.e. the class
           - itself will be distinct. (扩展库的公共jar文件，扩展是安全的即使没有类装载器知道的jars，装载的类将为每个应用分别装载，也就是这些类都是不同的)
           -->
        <class-loader>
          <tree-loader path="${resin.root}/ext-webapp-lib"/>
        </class-loader>
 
        <!-- Enable EL expressions in Servlet and Filter init-param ()-->
        <allow-servlet-el/>
      </prologue>
 
      <!-- Sets timeout values for cacheable pages, e.g. static pages (设置缓存、静态页面的数值。)-->
      <cache-mapping url-pattern="/" expires="5s"/>
      <cache-mapping url-pattern="*.gif" expires="60s"/>
      <cache-mapping url-pattern="*.jpg" expires="60s"/>
      <cache-mapping url-pattern="*.png" expires="60s"/>
 
      <!-- for security, disable session URLs by default. (安全的原因，默认禁用了会话的URL) -->
      <session-config>
        <enable-url-rewriting>false</enable-url-rewriting>
      </session-config>
 
      <!-- For security, set the HttpOnly flag in cookies.(安全原因，在cokkies中设置 HttpOnly标记 防止跨站攻击)
         - <cookie-http-only/>
        -->
 
      <!-- Some JSP packages have incorrect .tld files.  It's possible to set validate-taglib-schema to false to work around these packages. (一些JSP包有不正确的。TLD文件。它可以设置validate-taglib-schema为false来变通解决这些包。使其可以正常工作) -->
        <jsp>
          <validate-taglib-schema>true</validate-taglib-schema>
          <fast-jstl>true</fast-jstl>
        </jsp>
    </web-app-default>
 
    <!-- includes the app-default for default web-app behavior (导入用于默认网络应用程序的行为违约) -->
    <resin:import path="${resin.home}/conf/app-default.xml"/>
 
    <!-- Sample database pool configuration The JDBC name is java:comp/env/jdbc/test (简单的数据池配置)
         <database>
           <jndi-name>jdbc/mysql</jndi-name>
           <driver type="org.gjt.mm.mysql.Driver">
             <url>jdbc:mysql://localhost:3306/test</url>
             <user></user>
             <password></password>
            </driver>
            <prepared-statement-cache-size>8</prepared-statement-cache-size>
            <max-connections>20</max-connections>
            <max-idle-time>30s</max-idle-time>
          </database>
      -->
 
    <!-- Default host configuration applied to all virtual hosts.(定义所有虚拟主机的默认配置) -->
    <host-default>
      <!-- With another web server, like Apache, this can be commented out because the web server will log this information.(如果和别的 web服务器整合，这个可以被去掉，因为web服务器也可以记录这些信息)-->
      <access-log path="logs/access.log"
            format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"'
            rollover-period="1W"/>
 
      <!-- creates the webapps directory for .war expansion  (.war文件的目录)-->
      <web-app-deploy path="webapps"/>
 
      <!-- creates the deploy directory for .ear expansion (.ear文件的目录)-->
      <ear-deploy path="deploy">
        <ear-default>
          <ejb-server>
            <config-directory>WEB-INF</config-directory>
          </ejb-server>
        </ear-default>
      </ear-deploy>
 
      <!-- creates the deploy directory for .rar expansion (.rar文件目录)-->
      <resource-deploy path="deploy"/>
    </host-default>
 
    <!-- configures a deployment directory for virtual hosts (虚拟主机的目录)-->
    <host-deploy path="hosts">
      <host-default>
        <resin:import path="host.xml" optional="true"/>
      </host-default>
    </host-deploy>
 
    <!-- configures the default host, matching any host name (默认虚拟主机配置)-->
    <host id="" root-directory=".">
      <!-- configures an explicit root web-app matching the webapp's ROOT (默认的虚拟主机配置) -->
      <web-app id="/" root-directory="webapps/ROOT"/>
      <web-app id="/resin-admin" root-directory="${resin.home}/php/admin">
        <!-- Administration application /resin-admin (管理应用程序 /resin-admin) -->
        <prologue>
          <resin:set var="resin_admin_external" value="false"/>
          <resin:set var="resin_admin_insecure" value="true"/>
        </prologue>
      </web-app>
    </host>
  </cluster>
 
  <!-- Configuration for the web-tier/load-balancer (配置为Web层/负载平衡器)-->
  <resin:if test="${resin.professional}">
    <cluster id="web-tier">
      <server-default>
        <!-- The http port -->
        <http address="*" port="9080"/>
      </server-default>
      <server id="web-a" address="127.0.0.1" port="6700"/>
      <cache path="cache" memory-size="64M"/>
      <host id="">
        <web-app id="/">
 
           <rewrite-dispatch>
             <load-balance regexp="" cluster="app-tier"/>
           </rewrite-dispatch>
 
        </web-app>
      </host>
    </cluster>
  </resin:if>
</resin>