global {
    usage-count no;  #是否参加DRBD使用者统计，默认是参加
}

#通用设置
common {
#    protocol C;    
#     handlers {　　　
#     　　 pri-on-incon-degr "/usr/lib/drbd/notify-pri-on-incon-degr.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
#     　　 pri-lost-after-sb "/usr/lib/drbd/notify-pri-lost-after-sb.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
#     　　 local-io-error "/usr/lib/drbd/notify-io-error.sh; /usr/lib/drbd/notify-emergency-shutdown.sh; echo o > /proc/sysrq-trigger ; halt -f";
# 　　}
#     startup {
#         wfc-timeout          240;
#         degr-wfc-timeout     240;
#         outdated-wfc-timeout 240;
#     }
#     disk {
#         on-io-error detach;
#     }
#     net { 
#         cram-hmac-alg md5;  #DRBD同步时使用的验证方式和密码
#         shared-secret "testdrbd";
#     }
    syncer {
        rate 100M;      #主节点和备用节点同步时最大的网络速率 工作中是100M~1000M
        verify-alg crc32c; #验证算法
	al-extents 517;
    }
}

#资源设置|主从模式 一个资源 / 还能添加资源就是 data2 / data3
resource data{
    protocol C;   #使用DRBD的第三种同步协议，表示收到远程主机的写入确认后认为写入完成 (重点)
    disk {
        on-io-error detach;  #磁盘出现IO错误处理
    }

    #两台主备节点配置 (关键点)
    on data1 {
        device /dev/drbd0;  #drbd写设备有自己对应的分区
        disk /dev/sdb1;        #本地数据分区1
        address  192.168.2.100:7788;  #心跳/数据传输接口 (建议把这个地址设置到hosts中改成心跳线的网卡)
        meta-disk /dev/sdb2[0];  #meta data数据分区2
    }

    on data2 {
        device /dev/drbd0;  #drbd写设备有自己对应的分区
        disk /dev/sdb1;        #数据
        address  192.168.2.101:7788;  #心跳/数据传输接口
        meta-disk /dev/sdb2[0];  #meta data数据分区
    }
}
